# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        brew install python@3.9
        python3.9 -m venv ai
        ls -a
        source ai/bin/activate
        echo "================="
        python --version
        echo "================="
        python -m pip install --upgrade pip
        pip install buildozer
        pip install kivy
        pip install kivymd
        pip install Cython==0.29.33
        pip list -v
    - name: generate apk
      run: |
        export PATH="/Users/runner/work/ImageRecognitionAPK/ImageRecognitionAPK/ai/bin:$PATH"
        export PYTHONNOUSERSITE=False
        export VIRTUAL_ENV="/Users/runner/work/ImageRecognitionAPK/ImageRecognitionAPK/ai"
        export PYTHONFORANDROID_PREREQUISITES_INSTALL_INTERACTIVE=0
        buildozer -v android debug

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload APK to Release
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ github.token }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /Users/runner/work/ImageRecognitionAPK/ImageRecognitionAPK/.buildozer/android/platform/build-arm64-v8a_armeabi-v7a/dists/myapp/build/outputs/apk/debug/myapp-debug.apk
          asset_name: myapp-debug.apk
          asset_content_type: application/vnd.android.package-archive
